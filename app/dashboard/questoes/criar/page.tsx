"use client";

import { useForm, SubmitHandler } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { z } from "zod";

import { ChevronLeft, Upload } from "lucide-react";
import Image from "next/image";

import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import React from "react";
import AlternativesCard from "./_components/alternativesCard";

import { Metadata } from "next";

// export const metadata: Metadata = {
//   title: "Criar questão",
//   description: "Generated by create next app",
// };

export const description =
  "A product edit page. The product edit page has a form to edit the product details, stock, product category, product status, and product images. The product edit page has a sidebar navigation and a main content area. The main content area has a form to edit the product details, stock, product category, product status, and product images. The sidebar navigation has links to product details, stock, product category, product status, and product images.";

const questionSchema = z.object({
  statement: z.string(),
  explanation: z.string(),
  topic: z.string(),
  subTopic: z.string(),
  year: z.number(), // 0 is treated as a number here
  source: z.string(),
  sourceUrl: z.string(),
  authorId: z.string(),
  tags: z.array(z.string()),
  questionDifficulty: z.enum(["EASY", "MEDIUM", "HARD"]), // Assuming this could have more values
  questionAlternatives: z.array(
    z.object({
      imageUrls: z.array(z.string()),
      content: z.string(),
      correct: z.boolean(),
    })
  ),
});

type QuestionSchemaValues = z.infer<typeof questionSchema>;

export default function Dashboard() {
  const {
    control,
    register,
    handleSubmit,
    setValue,
    formState: { errors },
  } = useForm<QuestionSchemaValues>({
    resolver: zodResolver(questionSchema),
  });

  const onSubmit: SubmitHandler<QuestionSchemaValues> = (data) => {
    console.log(data); // You will get all form data here
  };

  return (
    <form onSubmit={handleSubmit(onSubmit)}>
      <div className="flex min-h-screen w-full flex-col bg-muted/40">
        <div className="flex flex-col sm:gap-4 sm:py-4 sm:pl-14">
          <main className="grid flex-1 items-start gap-4 p-4 sm:px-6 sm:py-0 md:gap-8">
            <div className="w-full grid  flex-1 auto-rows-max gap-4">
              <div className="flex items-center gap-4">
                <Button variant="outline" size="icon" className="h-7 w-7">
                  <ChevronLeft className="h-4 w-4" />
                  <span className="sr-only">Back</span>
                </Button>
                <h1 className="flex-1 shrink-0 whitespace-nowrap text-xl font-semibold tracking-tight sm:grow-0">
                  Nova Questão
                </h1>
                <div className="hidden items-center gap-2 md:ml-auto md:flex">
                  <Button variant="outline" size="sm">
                    Descartar
                  </Button>
                  <Button size="sm">Criar Questão</Button>
                </div>
              </div>
              <div className="grid gap-4 md:grid-cols-[1fr_250px] lg:grid-cols-3 lg:gap-8">
                <div className="grid auto-rows-max items-start gap-4 lg:col-span-2 lg:gap-8">
                  <Card x-chunk="dashboard-07-chunk-0">
                    <CardHeader>
                      <CardTitle>Informações principais</CardTitle>
                      <CardDescription>
                        Informações básicas da questão.
                      </CardDescription>
                    </CardHeader>
                    <CardContent>
                      <div className="grid gap-6">
                        <div className="grid gap-3">
                          <Label htmlFor="name">Enunciado</Label>
                          <Input
                            id="name"
                            type="text"
                            className="w-full"
                            placeholder="Enunciado da questão"
                          />
                        </div>
                        <div className="grid gap-3">
                          <Label htmlFor="description">Descrição</Label>
                          <Textarea
                            id="description"
                            placeholder="Descrição detalhada da questão"
                            className="min-h-32"
                          />
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                  <Card x-chunk="dashboard-07-chunk-2">
                    <CardHeader>
                      <CardTitle>Categorias da questão</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="grid gap-6 sm:grid-cols-3">
                        <div className="grid gap-3">
                          <Label htmlFor="category">Categoria</Label>
                          <Select>
                            <SelectTrigger
                              id="category"
                              aria-label="Selecione uma categoria"
                            >
                              <SelectValue placeholder="Selecione uma categoria" />
                            </SelectTrigger>
                            <SelectContent>
                              <SelectItem value="human_science">
                                Ciências Humanas
                              </SelectItem>
                              <SelectItem value="exact_science">
                                Ciências Exatas
                              </SelectItem>
                              <SelectItem value="biological_science">
                                Ciências Biológicas
                              </SelectItem>
                            </SelectContent>
                          </Select>
                        </div>
                        <div className="grid gap-3">
                          <Label htmlFor="subcategory">
                            Subcategoria (opcional)
                          </Label>
                          <Select>
                            <SelectTrigger
                              id="subcategory"
                              aria-label="Selecione uma subcategoria"
                            >
                              <SelectValue placeholder="Selecione uma subcategoria" />
                            </SelectTrigger>
                            <SelectContent>
                              <SelectItem value="brazil_history">
                                História do Brasil
                              </SelectItem>
                              <SelectItem value="world_history">
                                História Mundial
                              </SelectItem>
                              <SelectItem value="trigonometry">
                                Trigonometria
                              </SelectItem>
                            </SelectContent>
                          </Select>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                  <AlternativesCard />
                </div>
                <div className="grid auto-rows-max items-start gap-4 lg:gap-8">
                  <Card x-chunk="dashboard-07-chunk-3">
                    <CardHeader>
                      <CardTitle>Detalhes</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div>
                        <div className="grid gap-6">
                          <div className="grid gap-3">
                            <Label htmlFor="status">Dificuldade</Label>
                            <Select>
                              <SelectTrigger
                                id="status"
                                aria-label="Select status"
                              >
                                <SelectValue placeholder="Selecione uma dificuldade" />
                              </SelectTrigger>
                              <SelectContent>
                                <SelectItem value="published">Fácil</SelectItem>
                                <SelectItem value="archived">Médio</SelectItem>
                                <SelectItem value="archived">
                                  Difícil
                                </SelectItem>
                              </SelectContent>
                            </Select>
                          </div>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                  <Card
                    className="overflow-hidden"
                    x-chunk="dashboard-07-chunk-4"
                  >
                    <CardHeader>
                      <CardTitle>Imagens</CardTitle>
                      <CardDescription>
                        Adicione imagens à sua questão
                      </CardDescription>
                    </CardHeader>
                    <CardContent>
                      <div className="grid gap-2">
                        <button className="flex aspect-square w-full items-center justify-center rounded-md border border-dashed">
                          <Upload className="h-4 w-4 text-muted-foreground" />
                          <span className="sr-only">Upload</span>
                        </button>
                      </div>
                    </CardContent>
                  </Card>
                  <Card x-chunk="dashboard-07-chunk-5">
                    <CardHeader>
                      <CardTitle>Arquivar questão</CardTitle>
                      <CardDescription>
                        Lipsum dolor sit amet, consectetur adipiscing elit.
                      </CardDescription>
                    </CardHeader>
                    <CardContent>
                      <div></div>
                      <Button size="sm" variant="secondary">
                        Archive Product
                      </Button>
                    </CardContent>
                  </Card>
                </div>
              </div>
              <div className="flex items-center justify-center gap-2 md:hidden">
                <Button variant="outline" size="sm">
                  Discard
                </Button>
                <Button size="sm">Save Product</Button>
              </div>
            </div>
          </main>
        </div>
      </div>
    </form>
  );
}
